// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UAParser;
using UrlShortener.Core;
using UrlShortener.Persistence;

#nullable disable

namespace UrlShortener.Migrator.Migrations
{
    [DbContext(typeof(UrlShortenerContext))]
    [Migration("20230730070219_Frist")]
    partial class Frist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UrlShortener.Domain.ShortUrl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<long>("CreationDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("DestinationUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("LastUpdateDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ShortUrls");
                });

            modelBuilder.Entity("UrlShortener.Domain.ShortUrlClick", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<ClientInfo>("ClientInfo")
                        .HasColumnType("jsonb");

                    b.Property<long>("CreationDateTime")
                        .HasColumnType("bigint");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<IpInfo>("IpInfo")
                        .HasColumnType("jsonb");

                    b.Property<string>("ShortUrlId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ShortUrlId");

                    b.ToTable("ShortUrlClicks");
                });

            modelBuilder.Entity("UrlShortener.Domain.ShortUrlClick", b =>
                {
                    b.HasOne("UrlShortener.Domain.ShortUrl", "ShortUrl")
                        .WithMany("ShortUrlClicks")
                        .HasForeignKey("ShortUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShortUrl");
                });

            modelBuilder.Entity("UrlShortener.Domain.ShortUrl", b =>
                {
                    b.Navigation("ShortUrlClicks");
                });
#pragma warning restore 612, 618
        }
    }
}
